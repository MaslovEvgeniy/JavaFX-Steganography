<?xml version="1.0" encoding="UTF-8"?>
<project name="lsb" default="all">
  
  
  <property file="lsb.properties"/>
  <!-- Uncomment the following property if no tests compilation is needed -->
  <!-- 
  <property name="skip.tests" value="true"/>
   -->
  
  <!-- Compiler options -->
  
  <property name="compiler.debug" value="on"/>
  <property name="compiler.generate.no.warnings" value="off"/>
  <property name="compiler.args" value=""/>
  <property name="compiler.max.memory" value="700m"/>
  <patternset id="ignored.files">
    <exclude name="**/*.hprof/**"/>
    <exclude name="**/*.pyc/**"/>
    <exclude name="**/*.pyo/**"/>
    <exclude name="**/*.rbc/**"/>
    <exclude name="**/*.yarb/**"/>
    <exclude name="**/*~/**"/>
    <exclude name="**/.DS_Store/**"/>
    <exclude name="**/.git/**"/>
    <exclude name="**/.hg/**"/>
    <exclude name="**/.svn/**"/>
    <exclude name="**/CVS/**"/>
    <exclude name="**/__pycache__/**"/>
    <exclude name="**/_svn/**"/>
    <exclude name="**/vssver.scc/**"/>
    <exclude name="**/vssver2.scc/**"/>
  </patternset>
  <patternset id="library.patterns">
    <include name="*.war"/>
    <include name="*.swc"/>
    <include name="*.apk"/>
    <include name="*.zip"/>
    <include name="*.egg"/>
    <include name="*.ane"/>
    <include name="*.jar"/>
    <include name="*.ear"/>
  </patternset>
  <patternset id="compiler.resources">
    <exclude name="**/?*.java"/>
    <exclude name="**/?*.form"/>
    <exclude name="**/?*.class"/>
    <exclude name="**/?*.groovy"/>
    <exclude name="**/?*.scala"/>
    <exclude name="**/?*.flex"/>
    <exclude name="**/?*.kt"/>
    <exclude name="**/?*.clj"/>
  </patternset>
  
  <!-- JDK definitions -->
  
  <property name="jdk.bin.1.8" value="${jdk.home.1.8}/bin"/>
  <path id="jdk.classpath.1.8">
    <fileset dir="${jdk.home.1.8}">
      <include name="jre/lib/charsets.jar"/>
      <include name="jre/lib/deploy.jar"/>
      <include name="jre/lib/ext/access-bridge-64.jar"/>
      <include name="jre/lib/ext/cldrdata.jar"/>
      <include name="jre/lib/ext/dnsns.jar"/>
      <include name="jre/lib/ext/jaccess.jar"/>
      <include name="jre/lib/ext/jfxrt.jar"/>
      <include name="jre/lib/ext/localedata.jar"/>
      <include name="jre/lib/ext/nashorn.jar"/>
      <include name="jre/lib/ext/sunec.jar"/>
      <include name="jre/lib/ext/sunjce_provider.jar"/>
      <include name="jre/lib/ext/sunmscapi.jar"/>
      <include name="jre/lib/ext/sunpkcs11.jar"/>
      <include name="jre/lib/ext/zipfs.jar"/>
      <include name="jre/lib/javaws.jar"/>
      <include name="jre/lib/jce.jar"/>
      <include name="jre/lib/jfr.jar"/>
      <include name="jre/lib/jfxswt.jar"/>
      <include name="jre/lib/jsse.jar"/>
      <include name="jre/lib/management-agent.jar"/>
      <include name="jre/lib/plugin.jar"/>
      <include name="jre/lib/resources.jar"/>
      <include name="jre/lib/rt.jar"/>
    </fileset>
  </path>
  
  <property name="project.jdk.home" value="${jdk.home.1.8}"/>
  <property name="project.jdk.bin" value="${jdk.bin.1.8}"/>
  <property name="project.jdk.classpath" value="jdk.classpath.1.8"/>
  
  
  <!-- Project Libraries -->
  
  <path id="library.jfoenix.classpath">
    <pathelement location="C:/Users/maslo/Downloads/icu4j-59_1.jar"/>
    <pathelement location="${basedir}/../fontawesomefx-8.9.jar"/>
    <pathelement location="${basedir}/../jfoenix.jar"/>
  </path>
  <!-- Register Custom Compiler Taskdefs -->
  <property name="javac2.home" value="${idea.home}/lib"/>
  <path id="javac2.classpath">
    <pathelement location="${javac2.home}/javac2.jar"/>
    <pathelement location="${javac2.home}/jdom.jar"/>
    <pathelement location="${javac2.home}/asm-all.jar"/>
    <pathelement location="${javac2.home}/jgoodies-forms.jar"/>
  </path>
  <target name="register.custom.compilers">
    <taskdef name="javac2" classname="com.intellij.ant.Javac2" classpathref="javac2.classpath"/>
    <taskdef name="instrumentIdeaExtensions" classname="com.intellij.ant.InstrumentIdeaExtensions" classpathref="javac2.classpath"/>
  </target>
  
  <!-- Modules -->
  
  <import file="${basedir}/module_lsb.xml"/>
  
  <target name="init" description="Build initialization">
    <!-- Perform any build initialization in this target -->
  </target>
  
  <target name="clean" depends="clean.module.lsb, clean.artifact.res" description="cleanup all"/>
  
  <target name="build.modules" depends="init, clean, compile.module.lsb" description="build all modules"/>
  
  <target name="init.artifacts">
    <property name="artifacts.temp.dir" value="${basedir}/__artifacts_temp"/>
    <property name="artifact.output.lsb:jar" value="${basedir}/out/artifacts/LSB_jar"/>
    <property name="artifact.output.lsb:jar2" value="${basedir}/out/artifacts/LSB_jar2"/>
    <property name="artifact.output.res" value="${basedir}/out/artifacts/Res"/>
    <mkdir dir="${artifacts.temp.dir}"/>
    <property name="temp.jar.path.LSB.jar" value="${artifacts.temp.dir}/LSB.jar"/>
    <property name="temp.jar.path.LSB.jar2" value="${artifacts.temp.dir}/1/LSB.jar"/>
    <mkdir dir="${artifacts.temp.dir}/1"/>
    <property name="artifact.temp.output." value="${artifacts.temp.dir}/"/>
    <taskdef resource="com/sun/javafx/tools/ant/antlib.xml" uri="javafx:com.sun.javafx.tools.ant" classpath="${jdk.home.1.8}/lib/ant-javafx.jar"/>
  </target>
  
  <target name="clean.artifact.res" description="clean Res artifact output">
    <delete dir="${artifact.output.res}"/>
  </target>
  
  <target name="artifact.lsb:jar" depends="init.artifacts, compile.module.lsb" description="Build &#39;LSB:jar&#39; artifact">
    <property name="artifact.temp.output.lsb:jar" value="${artifacts.temp.dir}/LSB_jar"/>
    <mkdir dir="${artifact.temp.output.lsb:jar}"/>
    <jar destfile="${temp.jar.path.LSB.jar}" duplicate="preserve" filesetmanifest="mergewithoutmain">
      <zipfileset dir="${lsb.output.dir}"/>
    </jar>
    <copy file="${temp.jar.path.LSB.jar}" tofile="${artifact.temp.output.lsb:jar}/LSB.jar"/>
  </target>
  
  <target name="artifact.lsb:jar2" depends="init.artifacts, compile.module.lsb" description="Build &#39;LSB:jar2&#39; artifact">
    <property name="artifact.temp.output.lsb:jar2" value="${artifacts.temp.dir}/LSB_jar2"/>
    <mkdir dir="${artifact.temp.output.lsb:jar2}"/>
    <jar destfile="${temp.jar.path.LSB.jar2}" duplicate="preserve" filesetmanifest="mergewithoutmain">
      <zipfileset dir="${lsb.output.dir}"/>
      <zipfileset src="${basedir}/../jfoenix.jar"/>
      <zipfileset src="${basedir}/../fontawesomefx-8.9.jar"/>
    </jar>
    <copy file="${temp.jar.path.LSB.jar2}" tofile="${artifact.temp.output.lsb:jar2}/LSB.jar"/>
  </target>
  
  <target name="artifact.res" depends="init.artifacts, artifact.lsb:jar2" description="Build &#39;Res&#39; artifact" xmlns:fx="javafx:com.sun.javafx.tools.ant">
    <mkdir dir="${artifact.output.res}"/>
    <copy todir="${artifact.temp.output.}">
      <fileset dir="${artifact.temp.output.lsb:jar2}"/>
    </copy>
    <fx:fileset id="all_but_" dir="${artifact.temp.output.}" includes="**/*.jar">
      <exclude name=""/>
    </fx:fileset>
    <fx:fileset id="all_" dir="${artifact.temp.output.}" includes="**/*.jar"/>
    <fx:application id="_id" name="Res" mainClass="Main"/>
    <fx:jar destfile="${artifact.temp.output.}/">
      <fx:application refid="_id"/>
      <fileset dir="${artifact.temp.output.}" excludes="**/*.jar"/>
      <fx:resources>
        <fx:fileset refid="all_but_"/>
      </fx:resources>
      <manifest>
        <attribute name="Implementation-Title" value=""/>
        <attribute name="Implementation-Version" value=""/>
        <attribute name="Implementation-Vendor" value=""/>
      </manifest>
    </fx:jar>
    <fx:deploy width="600" height="400" updatemode="background" outdir="${artifact.temp.output.}/deploy" outfile="" nativeBundles="all">
      <fx:application refid="_id"/>
      <fx:resources>
        <fx:fileset refid="all_"/>
      </fx:resources>
    </fx:deploy>
    <copy todir="${artifact.output.res}">
      <fileset dir="${artifact.temp.output.}/deploy"/>
    </copy>
    <delete includeemptydirs="true">
      <fileset dir="${artifact.temp.output.}"/>
    </delete>
  </target>
  
  <target name="build.all.artifacts" depends="artifact.lsb:jar, artifact.lsb:jar2, artifact.res" description="Build all artifacts">
    <mkdir dir="${artifact.output.lsb:jar}"/>
    <copy todir="${artifact.output.lsb:jar}">
      <fileset dir="${artifact.temp.output.lsb:jar}"/>
    </copy>
    <mkdir dir="${artifact.output.lsb:jar2}"/>
    <copy todir="${artifact.output.lsb:jar2}">
      <fileset dir="${artifact.temp.output.lsb:jar2}"/>
    </copy>
    
    <!-- Delete temporary files -->
    <delete dir="${artifacts.temp.dir}"/>
  </target>
  
  <target name="all" depends="build.modules, build.all.artifacts" description="build all"/>
</project>